<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sc_req_item</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="sc_req_item">cat_item=1bdc73288382e610fa7e7230feaad361^opened_byDYNAMIC90d1921e5f510100a9ad2572f2b477fe^EQ<item display_table="sc_cat_item" display_value="Request script" endquery="false" field="cat_item" goto="false" newquery="false" operator="=" or="false" value="1bdc73288382e610fa7e7230feaad361"/>
            <item endquery="false" field="opened_by" goto="false" newquery="false" operator="DYNAMIC" or="false" value="90d1921e5f510100a9ad2572f2b477fe"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Update request</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	// Add your code here
	if((current.operation() == 'update') && (current.state == -5)) {
		// only pending status can be updated
		// update request item state to Open
		var item = new GlideRecord('sc_req_item');
		item.get(current.sys_id);
		item.state = 1;
		item.update(); 

		// update sysapproval_approver state to 'requested'
		var gr = new GlideRecord('sysapproval_approver');
		gr.addQuery('sysapproval', current.sys_id);
		gr.query();
		while(gr.next()) {
			gr.state = 'requested';
			gr.update();
		}

		// send notification
		gs.eventQueue('x_1755686_test_scr.sendEmail', current, current.number, gs.getUserName());
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-06-17 09:31:12</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>b0e15e3f83caa650fa7e7230feaad30b</sys_id>
        <sys_mod_count>26</sys_mod_count>
        <sys_name>Update request</sys_name>
        <sys_overrides/>
        <sys_package display_value="Test scripting" source="x_1755686_test_scr">258c414583b96610fa7e7230feaad3c7</sys_package>
        <sys_policy/>
        <sys_scope display_value="Test scripting">258c414583b96610fa7e7230feaad3c7</sys_scope>
        <sys_update_name>sys_script_b0e15e3f83caa650fa7e7230feaad30b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-06-18 01:18:04</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=b0e15e3f83caa650fa7e7230feaad30b"/>
</record_update>
